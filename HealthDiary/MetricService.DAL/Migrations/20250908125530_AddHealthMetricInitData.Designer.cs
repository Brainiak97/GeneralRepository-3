// <auto-generated />
using System;
using MetricService.DAL.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MetricService.DAL.Migrations
{
    [DbContext(typeof(MetricServiceDbContext))]
    [Migration("20250908125530_AddHealthMetricInitData")]
    partial class AddHealthMetricInitData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MetricService.Domain.Models.AccessToMetrics", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasComment("Идентификатор");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("AccessExpirationDate")
                        .HasColumnType("DATE")
                        .HasComment("Дата, до которой действует доступ");

                    b.Property<int>("GrantedUserId")
                        .HasColumnType("integer")
                        .HasComment("Идентификатор пользователя, которому предоставляется доступ");

                    b.Property<bool>("IsPermanentAccess")
                        .HasColumnType("boolean")
                        .HasComment("Доступ без ограничения по срокам");

                    b.Property<int>("ProviderUserId")
                        .HasColumnType("integer")
                        .HasComment("Идентификатор пользователя, который предоставляет доступ");

                    b.HasKey("Id");

                    b.HasIndex("GrantedUserId");

                    b.HasIndex("ProviderUserId");

                    b.ToTable("AccessToMetrics", t =>
                        {
                            t.HasComment("Доступ к личным метрикам");
                        });
                });

            modelBuilder.Entity("MetricService.Domain.Models.AnalysisCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasComment("Идентификатор");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasComment("Описание категории анализа");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasComment("Наименование категории анализа");

                    b.HasKey("Id");

                    b.ToTable("AnalysisCategories", t =>
                        {
                            t.HasComment("Категории анализов");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Стандартные анализы крови, мочи, слюны, фекалий",
                            Name = "Общеклинические исследования"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Анализы, определяющие состав и метаболизм веществ в теле",
                            Name = "Биохимические исследования"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Анализы гормонов и их регуляторов",
                            Name = "Гормональные исследования"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Определение наличия антител и белков иммунной защиты",
                            Name = "Серологические исследования"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Анализы бактериального происхождения",
                            Name = "Бактериологические исследования"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Исследования мужской половой сферы",
                            Name = "Андрогенно-половые исследования"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Анализ генетического материала (ДНК, хромосомы)",
                            Name = "Генетические исследования"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Анализы женской репродуктивной системы",
                            Name = "Гинекологические исследования"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Анализы на наличие паразитарных организмов",
                            Name = "Паразитологические исследования"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Анализы на туберкулез",
                            Name = "Туберкулёзные исследования"
                        },
                        new
                        {
                            Id = 11,
                            Description = "Анализ тканей организма",
                            Name = "Гистологические исследования"
                        },
                        new
                        {
                            Id = 12,
                            Description = "Аппаратные исследования органов и систем",
                            Name = "Функциональные исследования"
                        },
                        new
                        {
                            Id = 13,
                            Description = "Анализы иммунной системы",
                            Name = "Иммунологические исследования"
                        },
                        new
                        {
                            Id = 14,
                            Description = "Анализы ревматологических заболеваний",
                            Name = "Ревматологические исследования"
                        },
                        new
                        {
                            Id = 15,
                            Description = "Анализы нарушений эндокринной системы",
                            Name = "Эндокринологические исследования"
                        },
                        new
                        {
                            Id = 16,
                            Description = "Женские гормоны и менструация",
                            Name = "Гинекологическо-эндокринные исследования"
                        },
                        new
                        {
                            Id = 17,
                            Description = "Анализы мочевыделительной системы",
                            Name = "Урологические исследования"
                        },
                        new
                        {
                            Id = 18,
                            Description = "Анализы патологий крови и сосудов",
                            Name = "Заболевания кровеносной системы"
                        },
                        new
                        {
                            Id = 19,
                            Description = "Баланс электролитов и газов в крови",
                            Name = "Нарушения кислотно-щелочного равновесия"
                        },
                        new
                        {
                            Id = 20,
                            Description = "Анализы секреторной функции поджелудочной железы",
                            Name = "Заболевания поджелудочной железы"
                        },
                        new
                        {
                            Id = 21,
                            Description = "Анализы диабета и преддиабета",
                            Name = "Заболевания углеводного обмена"
                        },
                        new
                        {
                            Id = 22,
                            Description = "Анализы желудочно-кишечного тракта",
                            Name = "Заболевания ЖКТ"
                        },
                        new
                        {
                            Id = 23,
                            Description = "Диагностика психических расстройств",
                            Name = "Психиатрические исследования"
                        },
                        new
                        {
                            Id = 24,
                            Description = "Анализы аллергических реакций",
                            Name = "Аллергические исследования"
                        },
                        new
                        {
                            Id = 25,
                            Description = "Анализы уровня гликированного гемоглобина",
                            Name = "Гликозилирующие исследования"
                        },
                        new
                        {
                            Id = 26,
                            Description = "Анализ наследственных факторов риска заболеваний",
                            Name = "Генетически-наследственные заболевания"
                        },
                        new
                        {
                            Id = 27,
                            Description = "Анализы сердечной деятельности",
                            Name = "Заболевания сердечно-сосудистой системы"
                        },
                        new
                        {
                            Id = 28,
                            Description = "Биомаркеры скрытых воспалительных процессов",
                            Name = "Латентные воспалительные реакции"
                        },
                        new
                        {
                            Id = 29,
                            Description = "Анализы зрительного аппарата",
                            Name = "Офтальмологические исследования"
                        },
                        new
                        {
                            Id = 30,
                            Description = "Анализы нервной системы",
                            Name = "Неврологические исследования"
                        },
                        new
                        {
                            Id = 31,
                            Description = "Анализ цереброспинальной, плевральной жидкости",
                            Name = "Образцы жидкостей организма"
                        },
                        new
                        {
                            Id = 32,
                            Description = "Исследования внутренних органов с эндоскопом",
                            Name = "Эндоскопические исследования"
                        },
                        new
                        {
                            Id = 33,
                            Description = "Постоянный контроль жизненно важных функций",
                            Name = "Суточные мониторинги"
                        },
                        new
                        {
                            Id = 34,
                            Description = "Анализ дыхательных путей и лёгких",
                            Name = "Дыхательная система"
                        },
                        new
                        {
                            Id = 35,
                            Description = "Анализы беременности и родоразрешения",
                            Name = "Беременность и роды"
                        },
                        new
                        {
                            Id = 36,
                            Description = "Анализы воспалений суставов, мягких тканей",
                            Name = "Воспалительные заболевания"
                        },
                        new
                        {
                            Id = 37,
                            Description = "Анализы глаза и офтальмологического статуса",
                            Name = "Орган зрения"
                        },
                        new
                        {
                            Id = 38,
                            Description = "Анализы прямой кишки и ануса",
                            Name = "Проктологические исследования"
                        },
                        new
                        {
                            Id = 39,
                            Description = "Анализ сердечного ритма и нарушений",
                            Name = "Диагностика аритмий"
                        },
                        new
                        {
                            Id = 40,
                            Description = "Анализ бронхиальной проходимости и лёгочной вентиляции",
                            Name = "Бронхолегочная патология"
                        },
                        new
                        {
                            Id = 41,
                            Description = "Анализы почечной недостаточности и нефропатий",
                            Name = "Нефротические синдромы"
                        },
                        new
                        {
                            Id = 42,
                            Description = "Анализ водно-электролитного баланса",
                            Name = "Водно-электролитный баланс"
                        },
                        new
                        {
                            Id = 43,
                            Description = "Анализ пищевода и желудка",
                            Name = "Пищеводно-кишечные нарушения"
                        },
                        new
                        {
                            Id = 44,
                            Description = "Анализ костно-мышечной системы",
                            Name = "Травматология и ортопедия"
                        },
                        new
                        {
                            Id = 45,
                            Description = "Анализ неврологической природы приступов",
                            Name = "Эпилепсия и судорожные расстройства"
                        },
                        new
                        {
                            Id = 46,
                            Description = "Томографические исследования организма",
                            Name = "Магнитно-резонансная томография"
                        },
                        new
                        {
                            Id = 47,
                            Description = "Анализ мозговых волн и нервных импульсов",
                            Name = "Функциональная нервная деятельность"
                        });
                });

            modelBuilder.Entity("MetricService.Domain.Models.AnalysisResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasComment("Идентификатор");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AnalysisTypeId")
                        .HasColumnType("integer")
                        .HasComment("Тип анализа");

                    b.Property<string>("Comment")
                        .HasColumnType("text")
                        .HasComment("Любые заметки или замечания по этому анализу");

                    b.Property<string>("DetailedResearchDescription")
                        .HasColumnType("text")
                        .HasComment("Развернутое описание исследования");

                    b.Property<DateTime>("TestedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasComment("Дата сдачи анализа");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasComment("Идентификатор пользователя");

                    b.Property<float?>("Value")
                        .HasColumnType("real")
                        .HasComment("Числовое значение результата анализа");

                    b.HasKey("Id");

                    b.HasIndex("AnalysisTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("AnalysisResults", t =>
                        {
                            t.HasComment("Результаты анализов");
                        });
                });

            modelBuilder.Entity("MetricService.Domain.Models.AnalysisType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasComment("Идентификатор");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AnalysisCategoryId")
                        .HasColumnType("integer")
                        .HasComment("Ссылка на категорию анализа");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasComment("Название конкретного анализа(например, «Лейкоциты», «Холестерин»)");

                    b.Property<string>("ReferenceValueFemale")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasComment("Эталонное значение женский");

                    b.Property<string>("ReferenceValueMale")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasComment("Эталонное значение мужской");

                    b.Property<string>("Unit")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AnalysisCategoryId");

                    b.ToTable("AnalysisTypes", t =>
                        {
                            t.HasComment("Типы анализов");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnalysisCategoryId = 2,
                            Name = "Аланинаминотрансфераза (АЛТ)",
                            ReferenceValueFemale = "До 34",
                            ReferenceValueMale = "До 41",
                            Unit = "Ед/л"
                        },
                        new
                        {
                            Id = 2,
                            AnalysisCategoryId = 17,
                            Name = "Альдостерон",
                            ReferenceValueFemale = "2—16",
                            ReferenceValueMale = "2—16",
                            Unit = "нг/дл"
                        },
                        new
                        {
                            Id = 3,
                            AnalysisCategoryId = 39,
                            Name = "Амбулаторная холтеровская регистрация ЭКГ",
                            ReferenceValueFemale = "Норма",
                            ReferenceValueMale = "Норма",
                            Unit = ""
                        },
                        new
                        {
                            Id = 4,
                            AnalysisCategoryId = 23,
                            Name = "Анализ венозной крови на токсины и наркотики",
                            ReferenceValueFemale = "Нет",
                            ReferenceValueMale = "Нет",
                            Unit = "Да/Нет"
                        },
                        new
                        {
                            Id = 5,
                            AnalysisCategoryId = 6,
                            Name = "Анализ на вирус гриппа",
                            ReferenceValueFemale = "Нет",
                            ReferenceValueMale = "Нет",
                            Unit = "Да/Нет"
                        },
                        new
                        {
                            Id = 6,
                            AnalysisCategoryId = 37,
                            Name = "Анализ спинномозговой жидкости (СМЖ)",
                            ReferenceValueFemale = "Норма",
                            ReferenceValueMale = "Норма",
                            Unit = ""
                        },
                        new
                        {
                            Id = 7,
                            AnalysisCategoryId = 4,
                            Name = "Антитела IgG к коронавирусу SARS-CoV-2",
                            ReferenceValueFemale = "Нет",
                            ReferenceValueMale = "Нет",
                            Unit = "Да/Нет"
                        },
                        new
                        {
                            Id = 8,
                            AnalysisCategoryId = 2,
                            Name = "Аспаратаминотрансфераза (АСТ)",
                            ReferenceValueFemale = "До 31",
                            ReferenceValueMale = "До 37",
                            Unit = "Ед/л"
                        },
                        new
                        {
                            Id = 9,
                            AnalysisCategoryId = 5,
                            Name = "Бакпосев мочи",
                            ReferenceValueFemale = "Отсутствие роста",
                            ReferenceValueMale = "Отсутствие роста",
                            Unit = "Колонии/мл"
                        },
                        new
                        {
                            Id = 10,
                            AnalysisCategoryId = 5,
                            Name = "Бактерии кишечной флоры (микробиология стула)",
                            ReferenceValueFemale = "Норма микрофлоры",
                            ReferenceValueMale = "Норма микрофлоры",
                            Unit = "кол-во кл/мл"
                        },
                        new
                        {
                            Id = 11,
                            AnalysisCategoryId = 34,
                            Name = "Беременность (анализ на ХГЧ)",
                            ReferenceValueFemale = "Положительная (беремен.)",
                            ReferenceValueMale = "Не применимо",
                            Unit = "мМЕ/мл"
                        },
                        new
                        {
                            Id = 12,
                            AnalysisCategoryId = 30,
                            Name = "Биохимический анализ мочи",
                            ReferenceValueFemale = "Норма",
                            ReferenceValueMale = "Норма",
                            Unit = ""
                        },
                        new
                        {
                            Id = 13,
                            AnalysisCategoryId = 2,
                            Name = "Биохимия крови",
                            ReferenceValueFemale = "—",
                            ReferenceValueMale = "—",
                            Unit = "—"
                        },
                        new
                        {
                            Id = 14,
                            AnalysisCategoryId = 4,
                            Name = "ВИЧ-антиген/антитело",
                            ReferenceValueFemale = "Нет",
                            ReferenceValueMale = "Нет",
                            Unit = "Да/Нет"
                        },
                        new
                        {
                            Id = 15,
                            AnalysisCategoryId = 28,
                            Name = "Волчаночный антикоагулянт (ВА)",
                            ReferenceValueFemale = "Нет",
                            ReferenceValueMale = "Нет",
                            Unit = "Да/Нет"
                        },
                        new
                        {
                            Id = 16,
                            AnalysisCategoryId = 35,
                            Name = "Воспалительные процессы (С-реактивный белок)",
                            ReferenceValueFemale = "Менее 5",
                            ReferenceValueMale = "Менее 5",
                            Unit = "мг/л"
                        },
                        new
                        {
                            Id = 17,
                            AnalysisCategoryId = 9,
                            Name = "Гельминтозы (яйца глистов)",
                            ReferenceValueFemale = "Нет яиц",
                            ReferenceValueMale = "Нет яиц",
                            Unit = ""
                        },
                        new
                        {
                            Id = 18,
                            AnalysisCategoryId = 1,
                            Name = "Гемоглобин",
                            ReferenceValueFemale = "120—150",
                            ReferenceValueMale = "130—170",
                            Unit = "г/л"
                        },
                        new
                        {
                            Id = 19,
                            AnalysisCategoryId = 11,
                            Name = "Гистология опухоли",
                            ReferenceValueFemale = "Доброкачественный",
                            ReferenceValueMale = "Доброкачественный",
                            Unit = "—"
                        },
                        new
                        {
                            Id = 20,
                            AnalysisCategoryId = 25,
                            Name = "Гликозилированный гемоглобин (HbA1c)",
                            ReferenceValueFemale = "Менее 6,5%",
                            ReferenceValueMale = "Менее 6,5%",
                            Unit = "%"
                        },
                        new
                        {
                            Id = 21,
                            AnalysisCategoryId = 2,
                            Name = "Глюкоза",
                            ReferenceValueFemale = "3,9—6,1",
                            ReferenceValueMale = "3,9—6,1",
                            Unit = "ммоль/л"
                        },
                        new
                        {
                            Id = 22,
                            AnalysisCategoryId = 3,
                            Name = "Гормональные исследования",
                            ReferenceValueFemale = "",
                            ReferenceValueMale = "",
                            Unit = ""
                        },
                        new
                        {
                            Id = 23,
                            AnalysisCategoryId = 10,
                            Name = "Диаскинтест (для туберкулеза)",
                            ReferenceValueFemale = "Нет",
                            ReferenceValueMale = "Нет",
                            Unit = "Да/Нет"
                        },
                        new
                        {
                            Id = 24,
                            AnalysisCategoryId = 7,
                            Name = "ДНК-исследование BRCA1/BRCA2",
                            ReferenceValueFemale = "Нет",
                            ReferenceValueMale = "Нет",
                            Unit = "Да/Нет"
                        },
                        new
                        {
                            Id = 25,
                            AnalysisCategoryId = 20,
                            Name = "Железо сывороточное",
                            ReferenceValueFemale = "9,0—30,4",
                            ReferenceValueMale = "11,6—31,3",
                            Unit = "мкмоль/л"
                        },
                        new
                        {
                            Id = 26,
                            AnalysisCategoryId = 13,
                            Name = "Иммуноглобулин E (IgE)",
                            ReferenceValueFemale = "Менее 100",
                            ReferenceValueMale = "Менее 100",
                            Unit = "кЕд/л"
                        },
                        new
                        {
                            Id = 27,
                            AnalysisCategoryId = 31,
                            Name = "Иммунограммой",
                            ReferenceValueFemale = "Норма",
                            ReferenceValueMale = "Норма",
                            Unit = ""
                        },
                        new
                        {
                            Id = 28,
                            AnalysisCategoryId = 6,
                            Name = "Исследование мокроты",
                            ReferenceValueFemale = "—",
                            ReferenceValueMale = "—",
                            Unit = "—"
                        },
                        new
                        {
                            Id = 29,
                            AnalysisCategoryId = 42,
                            Name = "Кислотно-основное состояние (КОС)",
                            ReferenceValueFemale = "Норма",
                            ReferenceValueMale = "Норма",
                            Unit = ""
                        },
                        new
                        {
                            Id = 30,
                            AnalysisCategoryId = 19,
                            Name = "Коагулограмма (Международное нормализованное отношение INR)",
                            ReferenceValueFemale = "0,8—1,2",
                            ReferenceValueMale = "0,8—1,2",
                            Unit = "Ед"
                        },
                        new
                        {
                            Id = 31,
                            AnalysisCategoryId = 1,
                            Name = "Количество лейкоцитов",
                            ReferenceValueFemale = "4—10",
                            ReferenceValueMale = "4—10",
                            Unit = "×10⁹/л"
                        },
                        new
                        {
                            Id = 32,
                            AnalysisCategoryId = 38,
                            Name = "Колоноскопия кишечника",
                            ReferenceValueFemale = "Норма",
                            ReferenceValueMale = "Норма",
                            Unit = ""
                        },
                        new
                        {
                            Id = 33,
                            AnalysisCategoryId = 44,
                            Name = "Компьютерная томография головы",
                            ReferenceValueFemale = "Норма",
                            ReferenceValueMale = "Норма",
                            Unit = ""
                        },
                        new
                        {
                            Id = 34,
                            AnalysisCategoryId = 20,
                            Name = "Кровеносные газы (pCO₂, pO₂)",
                            ReferenceValueFemale = "35—45 (pCO₂)/80—100(pO₂)",
                            ReferenceValueMale = "35—45 (pCO₂)/80—100(pO₂)",
                            Unit = "мм рт. ст."
                        },
                        new
                        {
                            Id = 35,
                            AnalysisCategoryId = 1,
                            Name = "Лейкоциты",
                            ReferenceValueFemale = "4—10",
                            ReferenceValueMale = "4—10",
                            Unit = "×10⁹/л"
                        },
                        new
                        {
                            Id = 36,
                            AnalysisCategoryId = 21,
                            Name = "Магний",
                            ReferenceValueFemale = "0,7—1,1",
                            ReferenceValueMale = "0,7—1,1",
                            Unit = "ммоль/л"
                        },
                        new
                        {
                            Id = 37,
                            AnalysisCategoryId = 8,
                            Name = "Мазок из влагалища (цитология)",
                            ReferenceValueFemale = "Без атипичных клеток",
                            ReferenceValueMale = "Без атипичных клеток",
                            Unit = ""
                        },
                        new
                        {
                            Id = 38,
                            AnalysisCategoryId = 33,
                            Name = "Межпозвонковая грыжа (МРТ поясничного отдела позвоночника)",
                            ReferenceValueFemale = "Норма",
                            ReferenceValueMale = "Норма",
                            Unit = ""
                        },
                        new
                        {
                            Id = 39,
                            AnalysisCategoryId = 8,
                            Name = "Микроскопия мазка",
                            ReferenceValueFemale = "Норма",
                            ReferenceValueMale = "Норма",
                            Unit = "—"
                        },
                        new
                        {
                            Id = 40,
                            AnalysisCategoryId = 7,
                            Name = "Молекулярно-генетические",
                            ReferenceValueFemale = "—",
                            ReferenceValueMale = "—",
                            Unit = "—"
                        },
                        new
                        {
                            Id = 41,
                            AnalysisCategoryId = 2,
                            Name = "Мочевина",
                            ReferenceValueFemale = "2,5—7,1",
                            ReferenceValueMale = "2,8—8,3",
                            Unit = "ммоль/л"
                        },
                        new
                        {
                            Id = 42,
                            AnalysisCategoryId = 46,
                            Name = "МРТ головного мозга",
                            ReferenceValueFemale = "Норма",
                            ReferenceValueMale = "Норма",
                            Unit = ""
                        },
                        new
                        {
                            Id = 43,
                            AnalysisCategoryId = 7,
                            Name = "Мутация BRCA1/BRCA2",
                            ReferenceValueFemale = "Отсутствует мутация",
                            ReferenceValueMale = "Отсутствует мутация",
                            Unit = "Да/Нет"
                        },
                        new
                        {
                            Id = 44,
                            AnalysisCategoryId = 32,
                            Name = "Наркотики и психоактивные вещества (алкоголь, никотин)",
                            ReferenceValueFemale = "Нет",
                            ReferenceValueMale = "Нет",
                            Unit = ""
                        },
                        new
                        {
                            Id = 45,
                            AnalysisCategoryId = 30,
                            Name = "Новорождённому скрининг",
                            ReferenceValueFemale = "Согласно нормативам ВОЗ",
                            ReferenceValueMale = "Согласно нормативам ВОЗ",
                            Unit = "—"
                        },
                        new
                        {
                            Id = 46,
                            AnalysisCategoryId = 1,
                            Name = "Общий анализ крови",
                            ReferenceValueFemale = "",
                            ReferenceValueMale = "",
                            Unit = ""
                        },
                        new
                        {
                            Id = 47,
                            AnalysisCategoryId = 41,
                            Name = "Общий анализ мочи",
                            ReferenceValueFemale = "Норма",
                            ReferenceValueMale = "Норма",
                            Unit = ""
                        },
                        new
                        {
                            Id = 48,
                            AnalysisCategoryId = 19,
                            Name = "Онкомаркер ПСА",
                            ReferenceValueFemale = "Не применяется",
                            ReferenceValueMale = "Менее 4,0",
                            Unit = "нг/мл"
                        },
                        new
                        {
                            Id = 49,
                            AnalysisCategoryId = 36,
                            Name = "Осмотр глазного дна (офтальмоскопия)",
                            ReferenceValueFemale = "Норма",
                            ReferenceValueMale = "Норма",
                            Unit = ""
                        },
                        new
                        {
                            Id = 50,
                            AnalysisCategoryId = 24,
                            Name = "Панель аллергенов",
                            ReferenceValueFemale = "Норма",
                            ReferenceValueMale = "Норма",
                            Unit = ""
                        },
                        new
                        {
                            Id = 51,
                            AnalysisCategoryId = 26,
                            Name = "Полиморфизм генов предрасположенности к заболеваниям",
                            ReferenceValueFemale = "Норма",
                            ReferenceValueMale = "Норма",
                            Unit = ""
                        },
                        new
                        {
                            Id = 52,
                            AnalysisCategoryId = 16,
                            Name = "Прогестерон (лютеиновая фаза)",
                            ReferenceValueFemale = "1,5—56,6 (2-я фаза цикла)",
                            ReferenceValueMale = "Менее 5,3",
                            Unit = "нмоль/л"
                        },
                        new
                        {
                            Id = 53,
                            AnalysisCategoryId = 3,
                            Name = "Пролактин",
                            ReferenceValueFemale = "4,5—25",
                            ReferenceValueMale = "2,5—17",
                            Unit = "нг/мл"
                        },
                        new
                        {
                            Id = 54,
                            AnalysisCategoryId = 14,
                            Name = "Ревматоидный фактор (РФ)",
                            ReferenceValueFemale = "Менее 14",
                            ReferenceValueMale = "Менее 14",
                            Unit = "Ед/л"
                        },
                        new
                        {
                            Id = 55,
                            AnalysisCategoryId = 25,
                            Name = "С-реактивный белок",
                            ReferenceValueFemale = "Менее 5",
                            ReferenceValueMale = "Менее 5",
                            Unit = "мг/л"
                        },
                        new
                        {
                            Id = 56,
                            AnalysisCategoryId = 3,
                            Name = "Свободный тироксин (FT4)",
                            ReferenceValueFemale = "12—22",
                            ReferenceValueMale = "12—22",
                            Unit = "пмоль/л"
                        },
                        new
                        {
                            Id = 57,
                            AnalysisCategoryId = 4,
                            Name = "Серология",
                            ReferenceValueFemale = "",
                            ReferenceValueMale = "",
                            Unit = ""
                        },
                        new
                        {
                            Id = 58,
                            AnalysisCategoryId = 1,
                            Name = "Скорость оседания эритроцитов (СОЭ)",
                            ReferenceValueFemale = "2—15",
                            ReferenceValueMale = "1—10",
                            Unit = "мм/ч"
                        },
                        new
                        {
                            Id = 59,
                            AnalysisCategoryId = 29,
                            Name = "СКРИНИНГ новорожденных",
                            ReferenceValueFemale = "Соответствие стандартам",
                            ReferenceValueMale = "Соответствие стандартам",
                            Unit = ""
                        },
                        new
                        {
                            Id = 60,
                            AnalysisCategoryId = 1,
                            Name = "СОЭ (скорость оседания)",
                            ReferenceValueFemale = "2—15",
                            ReferenceValueMale = "1—10",
                            Unit = "мм/ч"
                        },
                        new
                        {
                            Id = 61,
                            AnalysisCategoryId = 6,
                            Name = "Спермограмма",
                            ReferenceValueFemale = "Не применимо",
                            ReferenceValueMale = "Нормы согласно ВОЗ",
                            Unit = ""
                        },
                        new
                        {
                            Id = 62,
                            AnalysisCategoryId = 21,
                            Name = "Тест толерантности к глюкозе (ГТТ)",
                            ReferenceValueFemale = "Менее 7,8 спустя 2 ч",
                            ReferenceValueMale = "Менее 7,8 спустя 2 ч",
                            Unit = "ммоль/л"
                        },
                        new
                        {
                            Id = 63,
                            AnalysisCategoryId = 3,
                            Name = "Тиреотропный гормон (ТТГ)",
                            ReferenceValueFemale = "0,4—4,0",
                            ReferenceValueMale = "0,4—4,0",
                            Unit = "мЕд/л"
                        },
                        new
                        {
                            Id = 64,
                            AnalysisCategoryId = 3,
                            Name = "Тироксин свободный (FT₄)",
                            ReferenceValueFemale = "12—22",
                            ReferenceValueMale = "12—22",
                            Unit = "пмоль/л"
                        },
                        new
                        {
                            Id = 65,
                            AnalysisCategoryId = 43,
                            Name = "Толстый кишечник (эндоскопия толстой кишки)",
                            ReferenceValueFemale = "Норма",
                            ReferenceValueMale = "Норма",
                            Unit = ""
                        },
                        new
                        {
                            Id = 66,
                            AnalysisCategoryId = 15,
                            Name = "Трийодтиронин (Т3)",
                            ReferenceValueFemale = "1,2—2,8",
                            ReferenceValueMale = "1,2—2,8",
                            Unit = "нмоль/л"
                        },
                        new
                        {
                            Id = 67,
                            AnalysisCategoryId = 1,
                            Name = "Тромбоциты",
                            ReferenceValueFemale = "150—400",
                            ReferenceValueMale = "150—400",
                            Unit = "×10⁹/л"
                        },
                        new
                        {
                            Id = 68,
                            AnalysisCategoryId = 18,
                            Name = "Уровень железа в сыворотке крови",
                            ReferenceValueFemale = "9,0—30,4",
                            ReferenceValueMale = "11,6—31,3",
                            Unit = "мкмоль/л"
                        },
                        new
                        {
                            Id = 69,
                            AnalysisCategoryId = 23,
                            Name = "Фолиевая кислота",
                            ReferenceValueFemale = "3—17",
                            ReferenceValueMale = "3—17",
                            Unit = "нг/мл"
                        },
                        new
                        {
                            Id = 70,
                            AnalysisCategoryId = 15,
                            Name = "Фолликулостимулирующий гормон (ФСГ)",
                            ReferenceValueFemale = "1,7—25,0 (1-я фаза цикла)",
                            ReferenceValueMale = "1,5—12,4 (1-я фаза цикла)",
                            Unit = "мЕд/л"
                        },
                        new
                        {
                            Id = 71,
                            AnalysisCategoryId = 40,
                            Name = "Функциональная диагностика дыхания (спирометрия)",
                            ReferenceValueFemale = "Норма",
                            ReferenceValueMale = "Норма",
                            Unit = ""
                        },
                        new
                        {
                            Id = 72,
                            AnalysisCategoryId = 2,
                            Name = "Холестерин общий",
                            ReferenceValueFemale = "Менее 5,2",
                            ReferenceValueMale = "Менее 5,2",
                            Unit = "ммоль/л"
                        },
                        new
                        {
                            Id = 73,
                            AnalysisCategoryId = 22,
                            Name = "Цервикальный соскоб на цитологию",
                            ReferenceValueFemale = "Без признаков дисплазии",
                            ReferenceValueMale = "Без признаков дисплазии",
                            Unit = ""
                        },
                        new
                        {
                            Id = 74,
                            AnalysisCategoryId = 10,
                            Name = "Цитология шейки матки",
                            ReferenceValueFemale = "Без атипичных клеток",
                            ReferenceValueMale = "Без атипичных клеток",
                            Unit = ""
                        },
                        new
                        {
                            Id = 75,
                            AnalysisCategoryId = 22,
                            Name = "Щёлочная фосфатаза",
                            ReferenceValueFemale = "35—105",
                            ReferenceValueMale = "40—150",
                            Unit = "Ед/л"
                        },
                        new
                        {
                            Id = 76,
                            AnalysisCategoryId = 12,
                            Name = "Электрокардиограмма (ЭКГ)",
                            ReferenceValueFemale = "Норма",
                            ReferenceValueMale = "Норма",
                            Unit = ""
                        },
                        new
                        {
                            Id = 77,
                            AnalysisCategoryId = 45,
                            Name = "Электроэнцефалография (ЭЭГ)",
                            ReferenceValueFemale = "Норма",
                            ReferenceValueMale = "Норма",
                            Unit = ""
                        },
                        new
                        {
                            Id = 78,
                            AnalysisCategoryId = 1,
                            Name = "Эритроциты",
                            ReferenceValueFemale = "3,7—5,0",
                            ReferenceValueMale = "4,0—5,5",
                            Unit = "×10¹²/л"
                        },
                        new
                        {
                            Id = 79,
                            AnalysisCategoryId = 9,
                            Name = "Яйца гельминтов",
                            ReferenceValueFemale = "Нет яиц",
                            ReferenceValueMale = "Нет яиц",
                            Unit = ""
                        },
                        new
                        {
                            Id = 80,
                            AnalysisCategoryId = 4,
                            Name = "Anti-HBs (маркер иммунитета к гепатиту B)",
                            ReferenceValueFemale = "Да",
                            ReferenceValueMale = "Да",
                            Unit = "Да/Нет"
                        },
                        new
                        {
                            Id = 81,
                            AnalysisCategoryId = 29,
                            Name = "BRCA-маркеры рака груди",
                            ReferenceValueFemale = "Отсутствуют мутации",
                            ReferenceValueMale = "Отсутствуют мутации",
                            Unit = "Да/Нет"
                        },
                        new
                        {
                            Id = 82,
                            AnalysisCategoryId = 24,
                            Name = "D-димер",
                            ReferenceValueFemale = "Менее 243",
                            ReferenceValueMale = "Менее 243",
                            Unit = "нг/мл"
                        },
                        new
                        {
                            Id = 83,
                            AnalysisCategoryId = 4,
                            Name = "RW (сифилис)",
                            ReferenceValueFemale = "Нет",
                            ReferenceValueMale = "Нет",
                            Unit = "Да/Нет"
                        });
                });

            modelBuilder.Entity("MetricService.Domain.Models.DosageForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasComment("Идентификатор");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasComment("Наименование формы выпуска (таблетка, капсул, раствор и т.д.)");

                    b.HasKey("Id");

                    b.ToTable("DosageForms", t =>
                        {
                            t.HasComment("Форма выпуска препарата");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "таблетки"
                        },
                        new
                        {
                            Id = 2,
                            Name = "капсулы"
                        },
                        new
                        {
                            Id = 3,
                            Name = "сироп"
                        },
                        new
                        {
                            Id = 4,
                            Name = "раствор"
                        },
                        new
                        {
                            Id = 5,
                            Name = "капли"
                        },
                        new
                        {
                            Id = 6,
                            Name = "мазь"
                        },
                        new
                        {
                            Id = 7,
                            Name = "ампулы"
                        });
                });

            modelBuilder.Entity("MetricService.Domain.Models.HealthMetric", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasComment("Идентификатор");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasComment("Описание показателя (например, \"Оценивайте стресс от 1 до 10\")");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasComment("Наименование показателя (например, \"Уровень стресса\")");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasComment("Единица измерения (кг., мм.рт.ст., % и т.д.)");

                    b.HasKey("Id");

                    b.ToTable("HealthMetrics", t =>
                        {
                            t.HasComment("Показатель здоровья пользователя");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Пульс",
                            Name = "Частота сердечных сокращений",
                            Unit = "ударов/мин"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Верхнее давление",
                            Name = "Верхнее артериальное давление",
                            Unit = "мм рт. ст."
                        },
                        new
                        {
                            Id = 3,
                            Description = "Нижнее давление",
                            Name = "Нижнее артериальное давление",
                            Unit = "мм рт. ст."
                        },
                        new
                        {
                            Id = 4,
                            Description = "Процент жира в организме",
                            Name = "Процент жира в организме",
                            Unit = "%"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Суточное потребление воды",
                            Name = "Потребление воды",
                            Unit = "мл"
                        });
                });

            modelBuilder.Entity("MetricService.Domain.Models.HealthMetricValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasComment("Идентификатор");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .HasColumnType("text")
                        .HasComment("Комментарий к записи");

                    b.Property<int>("HealthMetricId")
                        .HasColumnType("integer")
                        .HasComment("Ссылка на созданный пользователем показатель");

                    b.Property<DateTime>("RecordedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasComment("Дата и время записи");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasComment("Идентификатор пользователя");

                    b.Property<float>("Value")
                        .HasColumnType("real")
                        .HasComment("Значение показателя");

                    b.HasKey("Id");

                    b.HasIndex("HealthMetricId");

                    b.HasIndex("UserId");

                    b.ToTable("HealthMetricsValue", t =>
                        {
                            t.HasComment("Значение показателя здоровья пользователя");
                        });
                });

            modelBuilder.Entity("MetricService.Domain.Models.Intake", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasComment("Идентификатор");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .HasColumnType("text")
                        .HasComment("Дополнительные заметки (например, причины пропуска)");

                    b.Property<short>("IntakeStatus")
                        .HasColumnType("smallint")
                        .HasComment("Статусы приема (например, \"принято\", \"пропущено\", \"перенесено\")");

                    b.Property<int>("RegimenId")
                        .HasColumnType("integer")
                        .HasComment("Схема приема лекарств");

                    b.Property<DateTime>("TakenAt")
                        .HasColumnType("timestamp with time zone")
                        .HasComment("Дата и время приема");

                    b.HasKey("Id");

                    b.HasIndex("RegimenId");

                    b.ToTable("Intakes", t =>
                        {
                            t.HasComment("Прием лекарств");
                        });
                });

            modelBuilder.Entity("MetricService.Domain.Models.Medication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasComment("Идентификатор");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DosageFormId")
                        .HasColumnType("integer")
                        .HasComment("Форма выпуска (таблетка, капсул, раствор и т.д.)");

                    b.Property<string>("Instruction")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("Инструкции по применению");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasComment("Наименование препарата");

                    b.HasKey("Id");

                    b.HasIndex("DosageFormId");

                    b.ToTable("Medications", t =>
                        {
                            t.HasComment("Медикаменты");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DosageFormId = 1,
                            Instruction = "Взрослым и детям старше 12 лет по 1 таблетке каждые 4-6 часов, максимум 4 грамма в сутки.",
                            Name = "Парацетамол"
                        },
                        new
                        {
                            Id = 2,
                            DosageFormId = 2,
                            Instruction = "Взрослым по 1 капсуле 3-4 раза в день, максимальная доза 2400 мг/сутки.",
                            Name = "Ибупрофен"
                        },
                        new
                        {
                            Id = 3,
                            DosageFormId = 2,
                            Instruction = "Одна капсула утром перед едой, 1 раз в сутки. Курс длится от 1 месяца до полугода.",
                            Name = "Омепразол"
                        },
                        new
                        {
                            Id = 4,
                            DosageFormId = 1,
                            Instruction = "По 1 таблетке 3 раза в день, максимальный курс приема — месяц.",
                            Name = "Фенибут"
                        },
                        new
                        {
                            Id = 5,
                            DosageFormId = 3,
                            Instruction = "Взрослым — 15-45 мл сиропа однократно вечером, до достижения регулярного эффекта.",
                            Name = "Дюфалак"
                        },
                        new
                        {
                            Id = 6,
                            DosageFormId = 4,
                            Instruction = "Раствор внутримышечно по 2-4 мл ежедневно в течение двух недель.",
                            Name = "Актовегин"
                        },
                        new
                        {
                            Id = 7,
                            DosageFormId = 1,
                            Instruction = "По 1-2 таблетки рассасывать трижды в день, курс — неделя.",
                            Name = "Лизобакт"
                        },
                        new
                        {
                            Id = 8,
                            DosageFormId = 1,
                            Instruction = "Одну таблетку 1-3 раза в сутки взрослым и подросткам старше 14 лет.",
                            Name = "Супрастин"
                        },
                        new
                        {
                            Id = 9,
                            DosageFormId = 2,
                            Instruction = "Один раз в сутки, начиная с дозы 150 мг. Лечение кандидоза продолжается до исчезновения симптомов.",
                            Name = "Флуконазол"
                        },
                        new
                        {
                            Id = 10,
                            DosageFormId = 1,
                            Instruction = "Начальная доза составляет 2 таблетки в день, постепенно увеличиваясь до 4 таблеток.",
                            Name = "Гептрал"
                        },
                        new
                        {
                            Id = 11,
                            DosageFormId = 5,
                            Instruction = "Развести 30 капель в небольшом количестве воды, пить 3 раза в день.",
                            Name = "Новопассит"
                        },
                        new
                        {
                            Id = 12,
                            DosageFormId = 5,
                            Instruction = "15-20 капель внутрь до еды, разводят водой, принимают 3 раза в день.",
                            Name = "Валокордин"
                        },
                        new
                        {
                            Id = 13,
                            DosageFormId = 1,
                            Instruction = "По 1-2 таблетки во время еды, в зависимости от тяжести пищеварения.",
                            Name = "Мезим форте"
                        },
                        new
                        {
                            Id = 14,
                            DosageFormId = 1,
                            Instruction = "Обычно принимается по 1 таблетке 3 раза в день в течение 2-4 недель.",
                            Name = "Афобазол"
                        },
                        new
                        {
                            Id = 15,
                            DosageFormId = 2,
                            Instruction = "Капсулы принимаются внутрь во время еды, от 1 до 3 штук за раз.",
                            Name = "Креон"
                        },
                        new
                        {
                            Id = 16,
                            DosageFormId = 6,
                            Instruction = "Наносить тонким слоем на поражённое место 2-3 раза в день.",
                            Name = "Диклофенак"
                        },
                        new
                        {
                            Id = 17,
                            DosageFormId = 1,
                            Instruction = "Начинают с минимальной дозы 1 таблетка в день, повышая дозу до максимальной в течение месяца.",
                            Name = "Артра"
                        },
                        new
                        {
                            Id = 18,
                            DosageFormId = 1,
                            Instruction = "По 1 таблетке под язык 2-3 раза в день. Максимальный курс приема — месяц.",
                            Name = "Глицин"
                        },
                        new
                        {
                            Id = 19,
                            DosageFormId = 1,
                            Instruction = "Детям старше 12 лет и взрослым назначают по 1 таблетке 3-4 раза в сутки.",
                            Name = "Левомицетин"
                        },
                        new
                        {
                            Id = 20,
                            DosageFormId = 7,
                            Instruction = "Раствор вводят внутривенно медленно, один раз в сутки, на протяжении 10-14 дней.",
                            Name = "Милдронат"
                        });
                });

            modelBuilder.Entity("MetricService.Domain.Models.PhysicalActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasComment("Идентификатор");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<float>("EnergyEquivalent")
                        .HasColumnType("real")
                        .HasComment("Метаболический эквивалент");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasComment("Наименование физической активности");

                    b.HasKey("Id");

                    b.ToTable("PhysicalActivities", t =>
                        {
                            t.HasComment("Физическая активность");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EnergyEquivalent = 5f,
                            Name = "Аквааэробика (умеренный темп)"
                        },
                        new
                        {
                            Id = 2,
                            EnergyEquivalent = 5f,
                            Name = "Акваслайдинг (водные горки)"
                        },
                        new
                        {
                            Id = 3,
                            EnergyEquivalent = 4f,
                            Name = "Активные домашние животные (игра с собакой)"
                        },
                        new
                        {
                            Id = 4,
                            EnergyEquivalent = 8f,
                            Name = "Альпинизм (взбирание в горы)"
                        },
                        new
                        {
                            Id = 5,
                            EnergyEquivalent = 4.5f,
                            Name = "Бадминтон"
                        },
                        new
                        {
                            Id = 6,
                            EnergyEquivalent = 7f,
                            Name = "Бег трусцой (8 км/ч)"
                        },
                        new
                        {
                            Id = 7,
                            EnergyEquivalent = 10f,
                            Name = "Бокс"
                        },
                        new
                        {
                            Id = 8,
                            EnergyEquivalent = 8f,
                            Name = "Борьба дзюдо (групповые занятия)"
                        },
                        new
                        {
                            Id = 9,
                            EnergyEquivalent = 5f,
                            Name = "Быстрая ходьба (более 6 км/ч)"
                        },
                        new
                        {
                            Id = 10,
                            EnergyEquivalent = 8f,
                            Name = "Быстрое восхождение по лестнице"
                        },
                        new
                        {
                            Id = 11,
                            EnergyEquivalent = 6f,
                            Name = "Велоспорт (10–16 км/ч)"
                        },
                        new
                        {
                            Id = 12,
                            EnergyEquivalent = 5.5f,
                            Name = "Верховая езда"
                        },
                        new
                        {
                            Id = 13,
                            EnergyEquivalent = 5f,
                            Name = "Водная аэробика"
                        },
                        new
                        {
                            Id = 14,
                            EnergyEquivalent = 4f,
                            Name = "Волейбол"
                        },
                        new
                        {
                            Id = 15,
                            EnergyEquivalent = 12f,
                            Name = "Высокогорные восхождения"
                        },
                        new
                        {
                            Id = 16,
                            EnergyEquivalent = 15f,
                            Name = "Высокоинтенсивные интервальные тренировки (HIIT)"
                        },
                        new
                        {
                            Id = 17,
                            EnergyEquivalent = 6f,
                            Name = "Гимнастика с утяжелителями"
                        },
                        new
                        {
                            Id = 18,
                            EnergyEquivalent = 12f,
                            Name = "Гонка на выносливость (железный человек)"
                        },
                        new
                        {
                            Id = 19,
                            EnergyEquivalent = 8f,
                            Name = "Горнолыжный спорт"
                        },
                        new
                        {
                            Id = 20,
                            EnergyEquivalent = 8f,
                            Name = "Гребля на байдарках или каноэ"
                        },
                        new
                        {
                            Id = 21,
                            EnergyEquivalent = 3.5f,
                            Name = "Домашние дела (уборка дома)"
                        },
                        new
                        {
                            Id = 22,
                            EnergyEquivalent = 2f,
                            Name = "Дыхательная гимнастика"
                        },
                        new
                        {
                            Id = 23,
                            EnergyEquivalent = 3f,
                            Name = "Езда на велосипеде (менее 10 км/ч)"
                        },
                        new
                        {
                            Id = 24,
                            EnergyEquivalent = 10f,
                            Name = "Забеги на длинные дистанции (марафон)"
                        },
                        new
                        {
                            Id = 25,
                            EnergyEquivalent = 4f,
                            Name = "Заниматься танцами (танго, вальс)"
                        },
                        new
                        {
                            Id = 26,
                            EnergyEquivalent = 2.5f,
                            Name = "Занятие йогой (медленные позы)"
                        },
                        new
                        {
                            Id = 27,
                            EnergyEquivalent = 8f,
                            Name = "Зимние виды спорта (лыжи, сноуборд)"
                        },
                        new
                        {
                            Id = 28,
                            EnergyEquivalent = 5f,
                            Name = "Игра в теннис (парный режим)"
                        },
                        new
                        {
                            Id = 29,
                            EnergyEquivalent = 8f,
                            Name = "Игры в баскетбол (не соревновательные)"
                        },
                        new
                        {
                            Id = 30,
                            EnergyEquivalent = 4.5f,
                            Name = "Йога (силовая практика)"
                        },
                        new
                        {
                            Id = 31,
                            EnergyEquivalent = 12f,
                            Name = "Кардиотренажёры (интервал-тренировка)"
                        },
                        new
                        {
                            Id = 32,
                            EnergyEquivalent = 10f,
                            Name = "Классическое плавание (энергичное)"
                        },
                        new
                        {
                            Id = 33,
                            EnergyEquivalent = 8f,
                            Name = "Командные игры (регби, хоккей)"
                        },
                        new
                        {
                            Id = 34,
                            EnergyEquivalent = 2.5f,
                            Name = "Концерт (стояние, хоровое исполнение песен)"
                        },
                        new
                        {
                            Id = 35,
                            EnergyEquivalent = 7f,
                            Name = "Конькобежный спорт"
                        },
                        new
                        {
                            Id = 36,
                            EnergyEquivalent = 10f,
                            Name = "Кроссфит"
                        },
                        new
                        {
                            Id = 37,
                            EnergyEquivalent = 3f,
                            Name = "Купание в море (игры, плескание)"
                        },
                        new
                        {
                            Id = 38,
                            EnergyEquivalent = 7f,
                            Name = "Легкая атлетика (пробежки)"
                        },
                        new
                        {
                            Id = 39,
                            EnergyEquivalent = 1f,
                            Name = "Лежачий покой"
                        },
                        new
                        {
                            Id = 40,
                            EnergyEquivalent = 5.5f,
                            Name = "Летний туризм (велосипедные прогулки)"
                        },
                        new
                        {
                            Id = 41,
                            EnergyEquivalent = 10f,
                            Name = "Марафон"
                        },
                        new
                        {
                            Id = 42,
                            EnergyEquivalent = 7f,
                            Name = "Обычная игра в футбол (любительский уровень)"
                        },
                        new
                        {
                            Id = 43,
                            EnergyEquivalent = 6f,
                            Name = "Перемещение тяжелой техники"
                        },
                        new
                        {
                            Id = 44,
                            EnergyEquivalent = 6f,
                            Name = "Перенос тяжелых предметов (сумки, коробки)"
                        },
                        new
                        {
                            Id = 45,
                            EnergyEquivalent = 3.5f,
                            Name = "Пилатес"
                        },
                        new
                        {
                            Id = 46,
                            EnergyEquivalent = 6f,
                            Name = "Плавание (легкий темп)"
                        },
                        new
                        {
                            Id = 47,
                            EnergyEquivalent = 5f,
                            Name = "Погрузка мебели"
                        },
                        new
                        {
                            Id = 48,
                            EnergyEquivalent = 3f,
                            Name = "Поездка на мотоцикле"
                        },
                        new
                        {
                            Id = 49,
                            EnergyEquivalent = 4f,
                            Name = "Покраска стен (ручной труд)"
                        },
                        new
                        {
                            Id = 50,
                            EnergyEquivalent = 3.5f,
                            Name = "Прогулочный шаг (4–5 км/ч)"
                        },
                        new
                        {
                            Id = 51,
                            EnergyEquivalent = 1.3f,
                            Name = "Просмотр телевизора"
                        },
                        new
                        {
                            Id = 52,
                            EnergyEquivalent = 10f,
                            Name = "Профессиональный бег (12 км/ч)"
                        },
                        new
                        {
                            Id = 53,
                            EnergyEquivalent = 1.5f,
                            Name = "Работа в офисе (сидячая)"
                        },
                        new
                        {
                            Id = 54,
                            EnergyEquivalent = 4f,
                            Name = "Работа с садовыми инструментами (газонокосилка)"
                        },
                        new
                        {
                            Id = 55,
                            EnergyEquivalent = 2.3f,
                            Name = "Растяжка"
                        },
                        new
                        {
                            Id = 56,
                            EnergyEquivalent = 5f,
                            Name = "Ремонт квартиры (перестановка мебели)"
                        },
                        new
                        {
                            Id = 57,
                            EnergyEquivalent = 3f,
                            Name = "Рыбалка (ловля рыбы удочкой)"
                        },
                        new
                        {
                            Id = 58,
                            EnergyEquivalent = 4f,
                            Name = "Садоводство (посадка растений, прополка)"
                        },
                        new
                        {
                            Id = 59,
                            EnergyEquivalent = 8f,
                            Name = "Санный спорт (гонки на санях)"
                        },
                        new
                        {
                            Id = 60,
                            EnergyEquivalent = 6f,
                            Name = "Сельскохозяйственная работа (ручная обработка земли)"
                        },
                        new
                        {
                            Id = 61,
                            EnergyEquivalent = 8f,
                            Name = "Серфинг (катание на волнах)"
                        },
                        new
                        {
                            Id = 62,
                            EnergyEquivalent = 3.5f,
                            Name = "Силовые тренировки (вес менее 5 кг)"
                        },
                        new
                        {
                            Id = 63,
                            EnergyEquivalent = 8f,
                            Name = "Скалолазание (скалодром)"
                        },
                        new
                        {
                            Id = 64,
                            EnergyEquivalent = 4.3f,
                            Name = "Скандинавская ходьба"
                        },
                        new
                        {
                            Id = 65,
                            EnergyEquivalent = 4.5f,
                            Name = "Совместная семейная прогулка (быстрая ходьба)"
                        },
                        new
                        {
                            Id = 66,
                            EnergyEquivalent = 0.9f,
                            Name = "Сон"
                        },
                        new
                        {
                            Id = 67,
                            EnergyEquivalent = 13f,
                            Name = "Соревнования по бегу на короткие дистанции"
                        },
                        new
                        {
                            Id = 68,
                            EnergyEquivalent = 4f,
                            Name = "Спокойная велосипедная поездка (10–16 км/ч)"
                        },
                        new
                        {
                            Id = 69,
                            EnergyEquivalent = 8f,
                            Name = "Спортивная гимнастика"
                        },
                        new
                        {
                            Id = 70,
                            EnergyEquivalent = 15f,
                            Name = "Спринт"
                        },
                        new
                        {
                            Id = 71,
                            EnergyEquivalent = 3.5f,
                            Name = "Стрельба из лука"
                        },
                        new
                        {
                            Id = 72,
                            EnergyEquivalent = 2.3f,
                            Name = "Стретчинг (растяжка мышц)"
                        },
                        new
                        {
                            Id = 73,
                            EnergyEquivalent = 4.5f,
                            Name = "Строительство забора"
                        },
                        new
                        {
                            Id = 74,
                            EnergyEquivalent = 2.5f,
                            Name = "Тай-чи (умеренный темп)"
                        },
                        new
                        {
                            Id = 75,
                            EnergyEquivalent = 6f,
                            Name = "Танцы (быстрое движение, зумба)"
                        },
                        new
                        {
                            Id = 76,
                            EnergyEquivalent = 4f,
                            Name = "Танцы (социальные танцы)"
                        },
                        new
                        {
                            Id = 77,
                            EnergyEquivalent = 6f,
                            Name = "Туризм пеший (горные походы)"
                        },
                        new
                        {
                            Id = 78,
                            EnergyEquivalent = 5.5f,
                            Name = "Упражнения на велотренажере (умеренная нагрузка)"
                        },
                        new
                        {
                            Id = 79,
                            EnergyEquivalent = 4f,
                            Name = "Ходьба (5–6 км/ч)"
                        },
                        new
                        {
                            Id = 80,
                            EnergyEquivalent = 5f,
                            Name = "Хождение пешком (6–7 км/ч)"
                        },
                        new
                        {
                            Id = 81,
                            EnergyEquivalent = 8f,
                            Name = "Хождение пешком вверх по лестнице"
                        },
                        new
                        {
                            Id = 82,
                            EnergyEquivalent = 7f,
                            Name = "Чистка снега лопатой"
                        },
                        new
                        {
                            Id = 83,
                            EnergyEquivalent = 7f,
                            Name = "Эллипсоид (умеренный темп)"
                        });
                });

            modelBuilder.Entity("MetricService.Domain.Models.Regimen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasComment("Идентификатор");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .HasColumnType("text")
                        .HasComment("Заметки или дополнения");

                    b.Property<string>("Dosage")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("Прописанная дозировка (например, \"1 табл.\" или \"5 мл\")");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date")
                        .HasComment("Предполагаемая дата окончания приема");

                    b.Property<int>("MedicationId")
                        .HasColumnType("integer")
                        .HasComment("Медицинский препарат");

                    b.Property<string>("Shedule")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("График приема (например, \"Утро, обед, вечер\")");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date")
                        .HasComment("Дата начала приема");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasComment("Пользователь");

                    b.HasKey("Id");

                    b.HasIndex("MedicationId");

                    b.HasIndex("UserId");

                    b.ToTable("Regimens", t =>
                        {
                            t.HasComment("Схема приема медикаментов");
                        });
                });

            modelBuilder.Entity("MetricService.Domain.Models.Reminder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasComment("Идентификатор");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsSend")
                        .HasColumnType("boolean")
                        .HasComment("Признак, было ли отправлено напоминание");

                    b.Property<int>("RegimenId")
                        .HasColumnType("integer")
                        .HasComment("Схема приема лекарств");

                    b.Property<DateTime>("RemindAt")
                        .HasColumnType("timestamp with time zone")
                        .HasComment("Время напоминания");

                    b.HasKey("Id");

                    b.HasIndex("RegimenId");

                    b.ToTable("Reminders", t =>
                        {
                            t.HasComment("Напоминание о приеме лекарств");
                        });
                });

            modelBuilder.Entity("MetricService.Domain.Models.Sleep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasComment("Идентификатор");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .HasColumnType("text")
                        .HasComment("примечания о качестве сна");

                    b.Property<DateTime>("EndSleep")
                        .HasColumnType("timestamp with time zone")
                        .HasComment("время окончания сна");

                    b.Property<short>("QualityRating")
                        .HasColumnType("smallint")
                        .HasComment("качество сна по 5-ой системе");

                    b.Property<DateTime>("StartSleep")
                        .HasColumnType("timestamp with time zone")
                        .HasComment("время начала сна");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasComment("идентификатор пользователя");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Sleeps", t =>
                        {
                            t.HasComment("Сон");
                        });
                });

            modelBuilder.Entity("MetricService.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasComment("Идентификатор");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("date")
                        .HasComment("дата рождения");

                    b.Property<short>("Height")
                        .HasColumnType("smallint")
                        .HasComment("рост в сантиметрах");

                    b.Property<float>("Weight")
                        .HasColumnType("real")
                        .HasComment("Вес в килограммах");

                    b.HasKey("Id");

                    b.ToTable("Users", t =>
                        {
                            t.HasComment("Пользователь");
                        });
                });

            modelBuilder.Entity("MetricService.Domain.Models.Workout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasComment("Идентификатор");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasComment("Описание");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("timestamp with time zone")
                        .HasComment("Время окончания тренировки");

                    b.Property<int>("PhysicalActivityId")
                        .HasColumnType("integer")
                        .HasComment("Физ. активность");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("timestamp with time zone")
                        .HasComment("Время начала тренировки");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasComment("Идентификатор пользователя");

                    b.HasKey("Id");

                    b.HasIndex("PhysicalActivityId");

                    b.HasIndex("UserId");

                    b.ToTable("Workouts", t =>
                        {
                            t.HasComment("Тренировки");
                        });
                });

            modelBuilder.Entity("MetricService.Domain.Models.AccessToMetrics", b =>
                {
                    b.HasOne("MetricService.Domain.Models.User", "GrantedUser")
                        .WithMany()
                        .HasForeignKey("GrantedUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MetricService.Domain.Models.User", "ProviderUser")
                        .WithMany()
                        .HasForeignKey("ProviderUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GrantedUser");

                    b.Navigation("ProviderUser");
                });

            modelBuilder.Entity("MetricService.Domain.Models.AnalysisResult", b =>
                {
                    b.HasOne("MetricService.Domain.Models.AnalysisType", "AnalysisType")
                        .WithMany()
                        .HasForeignKey("AnalysisTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("MetricService.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnalysisType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MetricService.Domain.Models.AnalysisType", b =>
                {
                    b.HasOne("MetricService.Domain.Models.AnalysisCategory", "AnalysisCategory")
                        .WithMany()
                        .HasForeignKey("AnalysisCategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AnalysisCategory");
                });

            modelBuilder.Entity("MetricService.Domain.Models.HealthMetricValue", b =>
                {
                    b.HasOne("MetricService.Domain.Models.HealthMetric", "HealthMetric")
                        .WithMany()
                        .HasForeignKey("HealthMetricId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("MetricService.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HealthMetric");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MetricService.Domain.Models.Intake", b =>
                {
                    b.HasOne("MetricService.Domain.Models.Regimen", "Regimen")
                        .WithMany()
                        .HasForeignKey("RegimenId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Regimen");
                });

            modelBuilder.Entity("MetricService.Domain.Models.Medication", b =>
                {
                    b.HasOne("MetricService.Domain.Models.DosageForm", "DosageForm")
                        .WithMany()
                        .HasForeignKey("DosageFormId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("DosageForm");
                });

            modelBuilder.Entity("MetricService.Domain.Models.Regimen", b =>
                {
                    b.HasOne("MetricService.Domain.Models.Medication", "Medication")
                        .WithMany()
                        .HasForeignKey("MedicationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("MetricService.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medication");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MetricService.Domain.Models.Reminder", b =>
                {
                    b.HasOne("MetricService.Domain.Models.Regimen", "Regimen")
                        .WithMany()
                        .HasForeignKey("RegimenId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Regimen");
                });

            modelBuilder.Entity("MetricService.Domain.Models.Sleep", b =>
                {
                    b.HasOne("MetricService.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MetricService.Domain.Models.Workout", b =>
                {
                    b.HasOne("MetricService.Domain.Models.PhysicalActivity", "PhysicalActivity")
                        .WithMany()
                        .HasForeignKey("PhysicalActivityId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("MetricService.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PhysicalActivity");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
